/* DO NOT EDIT, file generated by nestjs-i18n */

/* prettier-ignore */
import { Path } from "nestjs-i18n";
/* prettier-ignore */
export type I18nTranslations = {
    "error": {
        "Auth.Logout.Success": string;
        "Auth.Logout.Processed": string;
        "Auth.Token.Refreshed": string;
        "Auth.Device.Trusted": string;
        "Auth.2FA.Disabled": string;
        "Auth.2FA.Enabled": string;
        "Auth.Otp.SentSuccessfully": string;
        "Auth.Password.ResetSuccess": string;
        "Auth.Password.ChangeSuccess": string;
        "Auth.Login.Success": string;
        "Auth.Login.2FARequired": string;
        "Auth.Login.DeviceVerificationOtpRequired": string;
        "Auth.RememberMe.Set": string;
        "Auth.2FA.Setup.Success": string;
        "Auth.Device.AlreadyTrusted": string;
        "Auth.Device.AlreadyUntrusted": string;
        "Auth.2FA.Confirm.Success": string;
        "Auth.2FA.Verify.Success": string;
        "Auth.2FA.Verify.AskToTrustDevice": string;
        "Auth.Otp.Verified": string;
        "Auth.Device.Untrusted": string;
        "Error.Auth.Otp.Invalid": string;
        "Error.Auth.Otp.Expired": string;
        "Error.Auth.Otp.FailedToSend": string;
        "Error.Auth.Email.AlreadyExists": string;
        "Error.Auth.Email.NotFound": string;
        "Error.Auth.Password.Invalid": string;
        "Error.Auth.Password.Mismatch": string;
        "Error.Auth.Token.MissingAccessToken": string;
        "Error.Auth.Token.InvalidAccessToken": string;
        "Error.Auth.Token.ExpiredAccessToken": string;
        "Error.Auth.Token.MissingRefreshToken": string;
        "Error.Auth.Token.InvalidRefreshToken": string;
        "Error.Auth.Token.ExpiredRefreshToken": string;
        "Error.Auth.Token.RefreshTokenAlreadyUsed": string;
        "Error.Auth.Token.RefreshFailed": string;
        "Error.Auth.Access.Unauthorized": string;
        "Error.Auth.Access.Denied": string;
        "Error.Auth.Session.InvalidLogin": string;
        "Error.Auth.2FA.InvalidTOTP": string;
        "Error.Auth.2FA.AlreadyEnabled": string;
        "Error.Auth.2FA.NotEnabled": string;
        "Error.Auth.2FA.InvalidRecoveryCode": string;
        "Error.Auth.2FA.InvalidCodeFormat": string;
        "Error.Auth.OtpToken.Invalid": string;
        "Error.Auth.OtpToken.Expired": string;
        "Error.Auth.Device.Invalid": string;
        "Error.Auth.Device.Mismatch": string;
        "Error.Auth.Device.SetupFailed": string;
        "Error.Auth.Device.AssociationFailed": string;
        "Error.Auth.Google.UserInfoFailed": string;
        "Error.Auth.Session.AbsoluteLifetimeExceeded": string;
        "Error.Auth.Device.MissingSessionCreationTime": string;
        "Error.Global.Unknown": string;
        "Error.Global.ValidationFailed": string;
        "Error.Global.SerializationFailed": string;
        "Error.Global.InternalServerError": string;
        "HttpStatus.Title.BadRequest": string;
        "HttpStatus.Title.Unauthorized": string;
        "HttpStatus.Title.Forbidden": string;
        "HttpStatus.Title.NotFound": string;
        "HttpStatus.Title.Conflict": string;
        "HttpStatus.Title.UnprocessableEntity": string;
        "HttpStatus.Title.PreconditionFailed": string;
        "HttpStatus.Title.InternalServerError": string;
        "HttpStatus.Title.ServiceUnavailable": string;
        "HttpStatus.Title.HttpError": string;
        "Error.Auth.Google.CallbackErrorGeneric": string;
        "Error.Auth.Google.MissingCode": string;
        "Error.Auth.Google.StateMismatch": string;
        "Error.Auth.Google.InvalidPayload": string;
        "Error.Auth.Google.AccountConflict": string;
        "Auth.Google.SuccessProceedToSecurityChecks": string;
        "Auth.Session.RevokedSuccessfully": string;
    };
    "email": {
        "Email.SecurityAlert.Subject.Default": string;
        "Email.SecurityAlert.Subject.NewDeviceLogin": string;
        "Email.SecurityAlert.Subject.PasswordChanged": string;
        "Email.SecurityAlert.Subject.PasswordReset": string;
        "Email.SecurityAlert.Subject.TwoFactorEnabled": string;
        "Email.SecurityAlert.Subject.TwoFactorDisabled": string;
        "Email.SecurityAlert.Title.NewDeviceLogin": string;
        "Email.SecurityAlert.Title.PasswordChanged": string;
        "Email.SecurityAlert.Title.PasswordReset": string;
        "Email.SecurityAlert.Title.TwoFactorEnabled": string;
        "Email.SecurityAlert.Title.TwoFactorDisabled": string;
        "Email.SecurityAlert.MainMessage.NewDeviceLogin": string;
        "Email.SecurityAlert.MainMessage.PasswordChanged": string;
        "Email.SecurityAlert.MainMessage.PasswordReset": string;
        "Email.SecurityAlert.MainMessage.TwoFactorEnabled": string;
        "Email.SecurityAlert.MainMessage.TwoFactorDisabled": string;
        "Email.SecurityAlert.SecondaryMessage.NotYou": string;
        "Email.SecurityAlert.SecondaryMessage.Password.NotYou": string;
        "Email.SecurityAlert.SecondaryMessage.2FA.NotYouEnable": string;
        "Email.SecurityAlert.SecondaryMessage.2FA.NotYouDisable": string;
        "Email.SecurityAlert.Button.ReviewActivity": string;
        "Email.SecurityAlert.Button.ChangePassword": string;
        "Email.SecurityAlert.Button.SecureAccount": string;
        "Email.SecurityAlert.Button.Enable2FA": string;
        "Email.Field.Time": string;
        "Email.Field.IPAddress": string;
        "Email.Field.Device": string;
        "Email.Field.Location": string;
        "Email.Field.FingerprintDevice": string;
        "Email.Field.FingerprintOS": string;
        "Email.Field.FingerprintBrowser": string;
        "Email.Field.LocationUnknown": string;
        "Email.Field.DeviceName": string;
        "Email.Field.DeviceIdentifier": string;
        "Email.Field.NewIPAddress": string;
        "Email.Field.NewApprox.Location": string;
        "Email.Field.OldIPAddress": string;
        "Email.Field.OldLocation": string;
        "Email.OTPSubject.Register": string;
        "Email.OTPSubject.ResetPassword": string;
        "Email.OTPSubject.LoginUntrustedDevice": string;
        "Email.OTPSubject.Default": string;
    };
};
/* prettier-ignore */
export type I18nPath = Path<I18nTranslations>;
