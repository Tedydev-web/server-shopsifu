name: Deploy to Production

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Deploy to VPS
        id: deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_IP_HOST}}
          username: ${{ secrets.VPS_USERNAME}}
          password: ${{ secrets.VPS_PASSWORD }}
          script: |
            bash -i << 'EOF'
            # Load nvm
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"
            
            # Load shell environment
            source ~/.bashrc
            source ~/.profile
            
            # Ki·ªÉm tra m√¥i tr∆∞·ªùng
            echo "User: $(whoami)"
            echo "PATH: $PATH"
            which npm || echo "npm not found"
            which pm2 || echo "pm2 not found"
            node --version || echo "Node.js not found"
            npm --version || echo "npm not found"
            pm2 --version || echo "pm2 not found"
            
            # Di chuy·ªÉn v√†o th∆∞ m·ª•c d·ª± √°n
            cd server-shopsifu || exit 1
            
            # T·∫°o file .env
            echo "${{ secrets.ENV }}" > .env
            ls -la .env
            echo "File .env ƒë√£ ƒë∆∞·ª£c t·∫°o th√†nh c√¥ng"
            
            # K√©o code m·ªõi nh·∫•t
            git pull || exit 1
            
            # X√≥a cache v√† build c≈©
            rm -rf dist node_modules/.cache node_modules
            
            # C√†i ƒë·∫∑t dependencies
            npm ci || exit 1
            
            # Build ·ª©ng d·ª•ng
            npm run build || exit 1
            
            # Restart pm2
            pm2 restart server-shopsifu || exit 1
            
            # L∆∞u tr·∫°ng th√°i pm2
            PM2_STATUS=$(pm2 status)
            echo "PM2_STATUS<<EOF" >> $GITHUB_ENV
            echo "$PM2_STATUS" >> $GITHUB_ENV
            echo "EOF" >> $GITHUB_ENV
            
            # L∆∞u log pm2 (20 d√≤ng cu·ªëi)
            PM2_LOGS=$(pm2 logs server-shopsifu --lines 20 --nostream)
            echo "PM2_LOGS<<EOF" >> $GITHUB_ENV
            echo "$PM2_LOGS" >> $GITHUB_ENV
            echo "EOF" >> $GITHUB_ENV
            
            EOF

      - name: Get deployment details
        id: deployment
        run: |
          echo "commit_sha=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
          echo "commit_message=$(git log -1 --pretty=%B)" >> $GITHUB_OUTPUT
          echo "commit_author=$(git log -1 --pretty=%an)" >> $GITHUB_OUTPUT
          echo "commit_date=$(git log -1 --pretty=%cd)" >> $GITHUB_OUTPUT
          echo "branch=$(git rev-parse --abbrev-ref HEAD)" >> $GITHUB_OUTPUT

      - name: Send Discord Notification
        if: always()
        uses: Ilshidur/action-discord@master
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        with:
          args: |
            **üöÄ Deployment Notification**

            **Status**: ${{ job.status == 'success' && '‚úÖ Success' || '‚ùå Failed' }}
            **Repository**: [${{ github.repository }}](https://github.com/${{ github.repository }})
            **Branch**: `${{ steps.deployment.outputs.branch }}`
            **Commit**: [${{ steps.deployment.outputs.commit_sha }}](https://github.com/${{ github.repository }}/commit/${{ steps.deployment.outputs.commit_sha }})
            **Author**: ${{ steps.deployment.outputs.commit_author }}
            **Message**: ${{ steps.deployment.outputs.commit_message }}
            **Deployed At**: <t:${{ toJSON(github.event.head_commit.timestamp) }}:F>
            **Environment**: Production

            **PM2 Status**:
            ```
            ${{ env.PM2_STATUS }}
            ```

            **Recent Logs**:
            ```
            ${{ env.PM2_LOGS }}
            ```

            **Details**: Check [GitHub Actions](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})