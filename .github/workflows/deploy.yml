name: Deploy to Production

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Deploy to VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_IP_HOST}}
          username: ${{ secrets.VPS_USERNAME}}
          password: ${{ secrets.VPS_PASSWORD }}
          script: |
            # Install Node.js and npm
            curl -fsSL https://deb.nodesource.com/setup_16.x | sudo -E bash -
            sudo apt-get install -y nodejs

            # Verify Node.js and npm installation
            node -v
            npm -v

            # Install PM2 globally
            sudo npm install -g pm2

            # Move to the project directory
            cd server-shopsifu

            # Pull the latest code
            echo "${{ secrets.VPS_PASSWORD }}" | sudo -S git fetch origin master
            echo "${{ secrets.VPS_PASSWORD }}" | sudo -S git reset --hard origin/master

            # Remove old cache and build
            echo "${{ secrets.VPS_PASSWORD }}" | sudo -S rm -rf dist
            echo "${{ secrets.VPS_PASSWORD }}" | sudo -S rm -rf node_modules/.cache

            # Install dependencies
            echo "${{ secrets.VPS_PASSWORD }}" | sudo -S npm install

            # Create the .env file
            echo "${{ secrets.VPS_PASSWORD }}" | sudo -S cat > .env << EOL
            # Database Configuration
            DATABASE_URL=${{ secrets.DATABASE_URL }}

            # Server Configuration
            PORT=${{ secrets.PORT }}
            NODE_ENV=production

            # JWT Configuration
            ACCESS_TOKEN_SECRET=${{ secrets.ACCESS_TOKEN }}
            ACCESS_TOKEN_EXPIRES_IN=${{ secrets.ACCESS_TOKEN_EXPIRES_IN }}

            REFRESH_TOKEN_SECRET=${{ secrets.REFRESH_TOKEN_SECRET }}
            REFRESH_TOKEN_EXPIRES_IN=${{ secrets.REFRESH_TOKEN_EXPIRES_IN }}

            SECRET_API_KEY=${{ secrets.API_KEY }}
            ADMIN_NAME=${{ secrets.ADMIN_NAME }}
            ADMIN_PASSWORD=${{ secrets.ADMIN_PASSWORD }}
            ADMIN_EMAIL=${{ secrets.ADMIN_EMAIL }}
            ADMIN_PHONE_NUMBER=${{ secrets.ADMIN_PHONE_NUMBER }}

            OTP_EXPIRES_IN=${{ secrets.OTP_EXPIRES_IN }}

            # Other Configuration
            RESEND_API_KEY=${{ secrets.RESEND_API_KEY }}
            EOL

            # Build and restart with Node.js
            echo "${{ secrets.VPS_PASSWORD }}" | sudo -S npm run build
            echo "${{ secrets.VPS_PASSWORD }}" | sudo -S pm2 restart server-shopsifu

      - name: Get deployment details
        id: deployment
        run: |
          echo "commit_sha=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
          echo "commit_message=$(git log -1 --pretty=%B)" >> $GITHUB_OUTPUT
          echo "commit_author=$(git log -1 --pretty=%an)" >> $GITHUB_OUTPUT
          echo "commit_date=$(git log -1 --pretty=%cd)" >> $GITHUB_OUTPUT
          echo "branch=$(git rev-parse --abbrev-ref HEAD)" >> $GITHUB_OUTPUT

      - name: Send Discord Notification
        if: always()
        uses: Ilshidur/action-discord@master
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        with:
          args: |
            {
              "embeds": [
                {
                  "title": "🚀 Deployment Status: ${{ job.status }}",
                  "color": ${{ job.status == 'success' && '65280' || '16711680' }},
                  "description": "**Commit Message:**\n${{ steps.deployment.outputs.commit_message }}\n\n**Environment:** Production",
                  "fields": [
                    {
                      "name": "📦 Repository",
                      "value": "[${{ github.repository }}](https://github.com/${{ github.repository }})",
                      "inline": true
                    },
                    {
                      "name": "🌿 Branch",
                      "value": "`${{ steps.deployment.outputs.branch }}`",
                      "inline": true
                    },
                    {
                      "name": "👤 Author",
                      "value": "${{ steps.deployment.outputs.commit_author }}",
                      "inline": true
                    },
                    {
                      "name": "🔗 Commit",
                      "value": "[`${{ steps.deployment.outputs.commit_sha }}`](https://github.com/${{ github.repository }}/commit/${{ steps.deployment.outputs.commit_sha }})",
                      "inline": true
                    },
                    {
                      "name": "⏰ Deployed At",
                      "value": "<t:${{ toJSON(github.event.head_commit.timestamp) }}:F>",
                      "inline": true
                    },
                    {
                      "name": "🔄 Status",
                      "value": "${{ job.status == 'success' && '✅ Success' || '❌ Failed' }}",
                      "inline": true
                    }
                  ],
                  "footer": {
                    "text": "Shopsifu Backend Deployment"
                  },
                  "timestamp": "${{ toJSON(github.event.head_commit.timestamp) }}"
                }
              ]
            }
