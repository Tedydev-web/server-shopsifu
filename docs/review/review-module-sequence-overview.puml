@startuml
!theme aws-orange
skinparam backgroundColor #FFFFFF
skinparam defaultTextAlignment center
skinparam participant {
    BackgroundColor #E8F4FD
    BorderColor #1976D2
    FontColor #000000
    FontStyle bold
}
skinparam actor {
    BackgroundColor #FFF8E1
    BorderColor #F57C00
    FontColor #000000
    FontStyle bold
}
skinparam database {
    BackgroundColor #F3E5F5
    BorderColor #7B1FA2
    FontColor #000000
    FontStyle bold
}
skinparam note {
    BackgroundColor #FFFDE7
    BorderColor #F9A825
    FontColor #000000
}

title Mô-đun Đánh Giá - Tổng Quan Luồng Xử Lý
note top : Hệ thống quản lý đánh giá sản phẩm với xác thực và quản lý media

actor "Khách hàng" as Client
actor "Người dùng" as User
participant ReviewController
participant ReviewService
participant ReviewRepo
database PostgreSQL

== GET /reviews/products/:productId - Lấy Danh Sách Đánh Giá ==
Client -> ReviewController: GET /reviews/products/:productId?page=1&limit=10
note right
Cấu Hình Endpoint:
• @IsPublic() - Không cần xác thực
• @ZodSerializerDto(GetReviewsDTO) - Chuẩn hóa phản hồi
end note

ReviewController -> ReviewService: list(productId, pagination)

ReviewService -> ReviewRepo: list(productId, pagination)
ReviewRepo -> ReviewRepo: Tính toán metadata phân trang
note right
Logic Phân Trang:
• skip = (page - 1) * limit
• take = limit
• Truy vấn song song: count + findMany
• Lọc theo productId
• Bao gồm thông tin người dùng và media
end note

ReviewRepo -> PostgreSQL: count() với WHERE productId
ReviewRepo -> PostgreSQL: findMany() với include và pagination
note right
Tính Năng Truy Vấn Database:
• WHERE productId = :productId
• Include user (id, name, avatar)
• Include medias (url, type)
• ORDER BY createdAt DESC
• Phân trang với skip/take
end note
PostgreSQL --> ReviewRepo: Tổng số + dữ liệu đánh giá
ReviewRepo --> ReviewService: Đánh giá với metadata
ReviewService -> ReviewService: Tạo thông báo thành công đa ngôn ngữ
note right
Tích Hợp I18nService:
• Dịch thông báo thành công
• Hỗ trợ nhiều ngôn ngữ
• Key: 'review.review.success.GET_SUCCESS'
end note
ReviewService --> ReviewController: Phản hồi + thông báo đã localize
ReviewController --> Client: JSON với dữ liệu + metadata

== POST /reviews - Tạo Đánh Giá Mới ==
User -> ReviewController: POST /reviews + {content, rating, productId, orderId, medias}
note right
Cấu Hình Endpoint:
• @ActiveUser() - Xác thực người dùng
• @ZodSerializerDto(CreateReviewResDTO) - Chuẩn hóa phản hồi
end note

ReviewController -> ReviewService: create(user, body)

ReviewService -> ReviewRepo: create(userId, body)
ReviewRepo -> ReviewRepo: validateOrder({orderId, userId})
note right
Logic Xác Thực Đơn Hàng:
• Kiểm tra đơn hàng tồn tại và thuộc về người dùng
• Xác thực order.status = DELIVERED
• Chỉ đơn hàng đã giao mới được đánh giá
end note

ReviewRepo -> PostgreSQL: findUnique order với userId
PostgreSQL --> ReviewRepo: Dữ liệu đơn hàng

alt Xác thực đơn hàng thành công
    ReviewRepo -> PostgreSQL: $transaction (hoạt động nguyên tử)
    note right
    Giao Dịch Tạo Đánh Giá:
    • CREATE review với các trường audit
    • CREATE reviewMedia cho từng media
    • Xác thực unique constraint (user + product)
    • Hoạt động nguyên tử đảm bảo tính nhất quán
    end note

    ReviewRepo -> PostgreSQL: INSERT review
    PostgreSQL --> ReviewRepo: Đánh giá đã tạo

    ReviewRepo -> PostgreSQL: createManyAndReturn reviewMedia
    note right
    Quản Lý Media:
    • Tạo nhiều reviewMedia cùng lúc
    • Liên kết với reviewId
    • Hỗ trợ nhiều loại media
    • Trả về media đã tạo
    end note
    PostgreSQL --> ReviewRepo: Review media đã tạo

    ReviewRepo -> PostgreSQL: findUnique review với include
    PostgreSQL --> ReviewRepo: Review với user và media
    ReviewRepo --> ReviewService: Dữ liệu review hoàn chỉnh
    ReviewService -> ReviewService: Tạo thông báo thành công đa ngôn ngữ
    note right
    Tích Hợp I18nService:
    • Dịch thông báo thành công
    • Hỗ trợ nhiều ngôn ngữ
    • Key: 'review.review.success.CREATE_SUCCESS'
    end note
    ReviewService --> ReviewController: Phản hồi thành công
    ReviewController --> User: 201 Created + JSON response

else Xác thực đơn hàng thất bại
    ReviewRepo --> ReviewService: BadRequestException
    ReviewService --> ReviewController: Phản hồi lỗi
    ReviewController --> User: 400 Bad Request
end

== PUT /reviews/:reviewId - Cập Nhật Đánh Giá ==
User -> ReviewController: PUT /reviews/:reviewId + {data}
note right
Cấu Hình Endpoint:
• @ActiveUser() - Xác thực người dùng
• @ZodSerializerDto(UpdateReviewResDTO) - Chuẩn hóa phản hồi
end note

ReviewController -> ReviewService: update({user, reviewId, body})

ReviewService -> ReviewRepo: update({userId, reviewId, body})

ReviewRepo -> ReviewRepo: Xác thực song song
note right
Xác Thực Cập Nhật:
• validateOrder: Kiểm tra đơn hàng vẫn hợp lệ
• validateUpdateReview: Kiểm tra review thuộc về người dùng
• Kiểm tra updateCount < 1 (chỉ được sửa 1 lần)
end note

ReviewRepo -> PostgreSQL: findUnique order
ReviewRepo -> PostgreSQL: findUnique review
PostgreSQL --> ReviewRepo: Dữ liệu đơn hàng và review

alt Xác thực thành công
    ReviewRepo -> PostgreSQL: $transaction (hoạt động nguyên tử)
    note right
    Giao Dịch Cập Nhật Review:
    • UPDATE review với increment updateCount
    • DELETE tất cả reviewMedia cũ
    • CREATE reviewMedia mới
    • Hoạt động nguyên tử
    end note

    ReviewRepo -> PostgreSQL: UPDATE review với updateCount
    PostgreSQL --> ReviewRepo: Review đã cập nhật

    ReviewRepo -> PostgreSQL: DELETE reviewMedia WHERE reviewId
    PostgreSQL --> ReviewRepo: Media cũ đã xóa

    ReviewRepo -> PostgreSQL: createManyAndReturn reviewMedia
    PostgreSQL --> ReviewRepo: Media mới đã tạo

    ReviewRepo -> PostgreSQL: findUnique review với include
    PostgreSQL --> ReviewRepo: Review đã cập nhật với user và media
    ReviewRepo --> ReviewService: Dữ liệu cập nhật hoàn chỉnh
    ReviewService -> ReviewService: Tạo thông báo thành công đa ngôn ngữ
    note right
    Tích Hợp I18nService:
    • Dịch thông báo thành công
    • Hỗ trợ nhiều ngôn ngữ
    • Key: 'review.review.success.UPDATE_SUCCESS'
    end note
    ReviewService --> ReviewController: Phản hồi thành công
    ReviewController --> User: 200 OK + JSON response

else Xác thực thất bại
    ReviewRepo --> ReviewService: BadRequestException/NotFoundException
    ReviewService --> ReviewController: Phản hồi lỗi
    ReviewController --> User: 400/404 Error
end

== Xử Lý Lỗi & Xác Thực ==
alt Lỗi đơn hàng không tồn tại
    ReviewRepo --> ReviewService: BadRequestException
    ReviewService --> ReviewController: Phản hồi lỗi
    ReviewController --> User: 400 Bad Request
    note right
    Lỗi Đơn Hàng:
    • "Đơn hàng không tồn tại hoặc không thuộc về bạn"
    • "Đơn hàng chưa được giao"
    end note

else Lỗi đánh giá không tồn tại
    ReviewRepo --> ReviewService: NotFoundException
    ReviewService --> ReviewController: Phản hồi lỗi
    ReviewController --> User: 404 Not Found
    note right
    Lỗi Đánh Giá:
    • "Đánh giá không tồn tại hoặc không thuộc về bạn"
    • "Bạn chỉ được phép sửa đánh giá 1 lần"
    end note

else Lỗi đánh giá trùng lặp
    ReviewRepo --> ReviewService: ConflictException
    ReviewService --> ReviewController: Phản hồi lỗi
    ReviewController --> User: 409 Conflict
    note right
    Lỗi Trùng Lặp:
    • "Bạn đã đánh giá sản phẩm này rồi"
    • Unique constraint: userId + productId
    end note

else Lỗi xác thực dữ liệu
    ReviewService --> ReviewController: ValidationException
    ReviewController --> User: 422 Unprocessable Entity

else Lỗi database
    ReviewRepo --> ReviewService: DatabaseException
    ReviewService --> ReviewController: Phản hồi lỗi
    ReviewController --> User: 500 Internal Server Error
end

== Logic Nghiệp Vụ ==
alt Xác thực rating
    ReviewService -> ReviewService: Xác thực rating 0-5
    note right
    Xác Thực Rating:
    • rating: number.int().min(0).max(5)
    • Xác thực trong Zod schema
    • Đảm bảo rating hợp lệ
    end note
end

alt Xác thực media
    ReviewService -> ReviewService: Xác thực loại media
    note right
    Xác Thực Media:
    • url: string.max(1000)
    • type: MediaType enum
    • Hỗ trợ nhiều media cho mỗi đánh giá
    end note
end

== Trả Kết Quả ==
ReviewService -> ReviewService: Tạo thông báo đa ngôn ngữ (I18nService)
ReviewService --> ReviewController: Phản hồi + Thông báo đã localize
ReviewController --> User: JSON Response với metadata đầy đủ

note bottom
**Đặc điểm chính của module Đánh Giá:**
• API công khai cho danh sách đánh giá (không cần xác thực)
• API được bảo vệ cho tạo/cập nhật (cần xác thực)
• Xác thực đơn hàng nghiêm ngặt (chỉ DELIVERED mới đánh giá được)
• Giới hạn cập nhật: chỉ được sửa 1 lần
• Quản lý media với hoạt động nguyên tử
• Unique constraint: user + product (1 đánh giá mỗi người dùng mỗi sản phẩm)
• Phân trang với metadata đầy đủ
• Hỗ trợ đa ngôn ngữ
• Xử lý lỗi toàn diện
end note

@enduml
